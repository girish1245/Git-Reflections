When would you want to use a remote repository rather than keeping all your work local?

When ever I plan to use multiple system's, I can directly create files in github itself and then later download them to my local. I won't be dependent on
one particular machine anymore and also I let others see my code.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because there are scenarios's where I dont want my code in my remote to be updated in my local. I want to review it and pull it manually.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Clone: When I want a copy with commit history from github or on my local, then I will use clone.

Branch: When I have new features in my codebase but I don't want to add to the official version then I wil use branches (or) if I want someone else to work on my codebase they would use a branch.

Fork: When I want to use a user's codebase and want it to be visible on my github profile I iwll use fork.


What is the benefit of having a copy of the last known state of the remote stored locally?

	It would avoid merge conflicts between origin & master while merging. So, if we have an updated version of origin in our local origin.master, then we can merge both master and origin/master after resolving conflicts.
	Using Git fetch we can update our local origin/master
	And then resolve conflicts and merge origin & master. 

	How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

By using Git, I would create a repository when building an application and add collabrators to my repository. Whenever I want to push some changes I will create a spearate branch and submit a pull request for letting other's go through my code and review it. similarly I would play the same reviewer role in other people code. 
 